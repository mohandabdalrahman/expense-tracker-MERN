{"ast":null,"code":"var _jsxFileName = \"/Users/mohand.abdelrahman/Documents/NodaJS/expense-tracker-MERN/client/src/context/globalState.js\";\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\nconst initialState = {\n  transactions: [],\n  loading: true\n};\nexport const GlobalContext = createContext(initialState); // provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState); // Actions\n\n  async function getTransactions() {\n    try {\n      const transactions = await axios('/api/v1/transactions');\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: transactions.data.data\n      });\n    } catch (error) {\n      console.log('getTransactions -> error', error);\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`);\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id\n      });\n    } catch (error) {\n      console.log('deleteTransaction -> error', error);\n    }\n  }\n\n  function addTransation(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      deleteTransaction,\n      addTransation,\n      getTransactions,\n      loading: state.loading\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/mohand.abdelrahman/Documents/NodaJS/expense-tracker-MERN/client/src/context/globalState.js"],"names":["React","createContext","useReducer","AppReducer","axios","initialState","transactions","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","type","payload","data","error","console","log","deleteTransaction","id","delete","addTransation","transaction"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;AAKA,OAAO,MAAMC,aAAa,GAAGP,aAAa,CAACI,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMI,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACC,UAAD,EAAaE,YAAb,CAApC,CAD8C,CAG9C;;AACA,iBAAeQ,eAAf,GAAiC;AAC/B,QAAI;AACF,YAAMP,YAAY,GAAG,MAAMF,KAAK,CAAC,sBAAD,CAAhC;AACAQ,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAE,kBADC;AAEPC,QAAAA,OAAO,EAAET,YAAY,CAACU,IAAb,CAAkBA;AAFpB,OAAD,CAAR;AAID,KAND,CAME,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,KAAxC;AACD;AACF;;AAGD,iBAAeG,iBAAf,CAAiCC,EAAjC,EAAqC;AACnC,QAAI;AACF,YAAMjB,KAAK,CAACkB,MAAN,CAAc,wBAAuBD,EAAG,EAAxC,CAAN;AACAT,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAE,oBADC;AAEPC,QAAAA,OAAO,EAAEM;AAFF,OAAD,CAAR;AAID,KAND,CAME,OAAOJ,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,KAA1C;AACD;AACF;;AAED,WAASM,aAAT,CAAuBC,WAAvB,EAAoC;AAClCZ,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,iBADC;AAEPC,MAAAA,OAAO,EAAES;AAFF,KAAD,CAAR;AAID;;AAED,sBACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC7BlB,MAAAA,YAAY,EAAEK,KAAK,CAACL,YADS;AAE7Bc,MAAAA,iBAF6B;AAG7BG,MAAAA,aAH6B;AAI7BV,MAAAA,eAJ6B;AAK7BN,MAAAA,OAAO,EAAEI,KAAK,CAACJ;AALc,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGG,QAPH,CADF;AAWD,CA/CM","sourcesContent":["import React, { createContext, useReducer } from 'react'\nimport AppReducer from './AppReducer'\nimport axios from 'axios'\nconst initialState = {\n  transactions: [],\n  loading: true\n}\n\nexport const GlobalContext = createContext(initialState)\n\n// provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState)\n\n  // Actions\n  async function getTransactions() {\n    try {\n      const transactions = await axios('/api/v1/transactions')\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: transactions.data.data\n      })\n    } catch (error) {\n      console.log('getTransactions -> error', error)\n    }\n  }\n\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`)\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id\n      })\n    } catch (error) {\n      console.log('deleteTransaction -> error', error)\n    }\n  }\n\n  function addTransation(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    })\n  }\n\n  return (\n    <GlobalContext.Provider value={{\n      transactions: state.transactions,\n      deleteTransaction,\n      addTransation,\n      getTransactions,\n      loading: state.loading\n    }}>\n      {children}\n    </GlobalContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}