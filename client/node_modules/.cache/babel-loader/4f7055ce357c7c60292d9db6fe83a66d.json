{"ast":null,"code":"var _jsxFileName = \"/Users/mohand.abdelrahman/Documents/NodaJS/expense-tracker-MERN/client/src/context/globalState.js\";\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\nconst initialState = {\n  transactions: []\n};\nexport const GlobalContext = createContext(initialState); // provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState); // Actions\n\n  async function getTransactions() {\n    try {\n      const transactions = await axios('/api/v1/transactions');\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: transactions\n      });\n    } catch (error) {\n      console.log('getTransactions -> error', error);\n    }\n  }\n\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }\n\n  function addTransation(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      deleteTransaction,\n      addTransation,\n      getTransactions\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/mohand.abdelrahman/Documents/NodaJS/expense-tracker-MERN/client/src/context/globalState.js"],"names":["React","createContext","useReducer","AppReducer","axios","initialState","transactions","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","type","payload","error","console","log","deleteTransaction","id","addTransation","transaction"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE;AADK,CAArB;AAIA,OAAO,MAAMC,aAAa,GAAGN,aAAa,CAACI,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMG,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACC,UAAD,EAAaE,YAAb,CAApC,CAD8C,CAG9C;;AACA,iBAAeO,eAAf,GAAiC;AAC/B,QAAI;AACF,YAAMN,YAAY,GAAG,MAAMF,KAAK,CAAC,sBAAD,CAAhC;AACAO,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAE,kBADC;AAEPC,QAAAA,OAAO,EAAER;AAFF,OAAD,CAAR;AAID,KAND,CAME,OAAOS,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCF,KAAxC;AAED;AACF;;AAGD,WAASG,iBAAT,CAA2BC,EAA3B,EAA+B;AAC7BR,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,oBADC;AAEPC,MAAAA,OAAO,EAAEK;AAFF,KAAD,CAAR;AAID;;AAED,WAASC,aAAT,CAAuBC,WAAvB,EAAoC;AAClCV,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,iBADC;AAEPC,MAAAA,OAAO,EAAEO;AAFF,KAAD,CAAR;AAID;;AAED,sBACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC7Bf,MAAAA,YAAY,EAAEI,KAAK,CAACJ,YADS;AAE7BY,MAAAA,iBAF6B;AAG7BE,MAAAA,aAH6B;AAI7BR,MAAAA;AAJ6B,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGH,QANH,CADF;AAUD,CA1CM","sourcesContent":["import React, { createContext, useReducer } from 'react'\nimport AppReducer from './AppReducer'\nimport axios from 'axios'\nconst initialState = {\n  transactions: [],\n}\n\nexport const GlobalContext = createContext(initialState)\n\n// provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState)\n\n  // Actions\n  async function getTransactions() {\n    try {\n      const transactions = await axios('/api/v1/transactions')\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: transactions\n      })\n    } catch (error) {\n      console.log('getTransactions -> error', error)\n\n    }\n  }\n\n\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    })\n  }\n\n  function addTransation(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    })\n  }\n\n  return (\n    <GlobalContext.Provider value={{\n      transactions: state.transactions,\n      deleteTransaction,\n      addTransation,\n      getTransactions\n    }}>\n      {children}\n    </GlobalContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}