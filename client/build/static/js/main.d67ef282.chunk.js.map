{"version":3,"sources":["components/Header.jsx","context/AppReducer.js","context/globalState.js","utils/format.js","components/Balance.jsx","components/IncomeExpenses.jsx","components/TransactionItem.jsx","components/TransactionList.jsx","components/AddTransaction.jsx","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","_id","payload","loading","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","data","console","log","id","delete","post","res","Provider","value","deleteTransaction","addTransation","getTransactions","numberWithCommas","x","toString","replace","Balance","total","useContext","map","amount","reduce","acc","item","IncomeExpenses","amounts","income","expense","className","Math","abs","TransactionItem","text","onClick","TransactionList","useEffect","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","random","htmlFor","placeholder","onChange","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d67ef282.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return (\n    <>\n      <h2>Expense Tracker</h2>\n    </>\n  );\n};\n\nexport default Header;\n","export default (state, action) => {\n  switch (action.type) {\n    case 'DELETE_TRANSACTION':\n      return {\n        ...state,\n        transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\n      }\n    case 'ADD_TRANSACTION':\n      return {\n        ...state,\n        transactions: [...state.transactions, action.payload]\n      }\n    case 'GET_TRANSACTIONS':\n      return {\n        ...state,\n        loading: false,\n        transactions: action.payload\n      }\n    default:\n      return state\n  }\n}","import React, { createContext, useReducer } from 'react'\nimport AppReducer from './AppReducer'\nimport axios from 'axios'\nconst initialState = {\n  transactions: [],\n  loading: true\n}\n\nexport const GlobalContext = createContext(initialState)\n\n// provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState)\n\n  // Actions\n  async function getTransactions() {\n    try {\n      const transactions = await axios('/api/v1/transactions')\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: transactions.data.data\n      })\n    } catch (error) {\n      console.log('getTransactions -> error', error)\n    }\n  }\n\n\n  async function deleteTransaction(id) {\n    try {\n      await axios.delete(`/api/v1/transactions/${id}`)\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id\n      })\n    } catch (error) {\n      console.log('deleteTransaction -> error', error)\n    }\n  }\n\n  async function addTransation(transaction) {\n    try {\n      const res = await axios.post('/api/v1/transactions', transaction)\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: res.data.data\n      })\n    } catch (error) {\n      console.log('addTransation -> error', error)\n    }\n  }\n\n  return (\n    <GlobalContext.Provider value={{\n      transactions: state.transactions,\n      deleteTransaction,\n      addTransation,\n      getTransactions,\n      loading: state.loading\n    }}>\n      {children}\n    </GlobalContext.Provider>\n  )\n}","export function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/globalState';\nimport { numberWithCommas } from '../utils/format';\nconst Balance = () => {\n  const { transactions } = useContext(GlobalContext);\n  const total = transactions\n    .map((transaction) => transaction.amount)\n    .reduce((acc, item) => (acc += item), 0)\n  return (\n    <>\n      <h4>Your Balance</h4>\n      <h1 id=\"balance\">${numberWithCommas(total)}</h1>\n    </>\n  );\n};\n\nexport default Balance;\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/globalState';\nimport { numberWithCommas } from '../utils/format';\nconst IncomeExpenses = () => {\n  const { transactions } = useContext(GlobalContext);\n  const amounts = transactions.map((transaction) => transaction.amount);\n  const income = amounts\n    .filter((amount) => amount > 0)\n    .reduce((acc, item) => (acc += item), 0)\n\n  const expense = amounts\n    .filter((amount) => amount < 0)\n    .reduce((acc, item) => (acc += item), 0)\n\n  return (\n    <div className=\"inc-exp-container\">\n      <div>\n        <h4>Income</h4>\n        <p id=\"money-plus\" className=\"money plus\">\n          +${numberWithCommas(income)}\n        </p>\n      </div>\n      <div>\n        <h4>Expense</h4>\n        <p id=\"money-minus\" className=\"money minus\">\n          -${Math.abs(numberWithCommas(expense))}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default IncomeExpenses;\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/globalState';\nimport { numberWithCommas } from '../utils/format';\n\nconst TransactionItem = ({ transaction: { text, amount, _id } }) => {\n  const { deleteTransaction } = useContext(GlobalContext);\n  return (\n    <>\n      <li className={amount < 0 ? 'minus' : 'plus'}>\n        {text}{' '}\n        <span>\n          {amount < 0 ? '-' : '+'}${numberWithCommas(Math.abs(amount))}\n        </span>\n        <button onClick={() => deleteTransaction(_id)} className=\"delete-btn\">\n          x\n        </button>\n      </li>\n    </>\n  );\n};\n\nexport default TransactionItem;\n","import React, { useContext, useEffect } from 'react';\nimport { GlobalContext } from '../context/globalState';\nimport TransactionItem from './TransactionItem';\nconst TransactionList = () => {\n  const { transactions, getTransactions } = useContext(GlobalContext);\n  useEffect(() => {\n    getTransactions();\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <div>\n      <h3>History</h3>\n      <ul id=\"list\" className=\"list\">\n        {transactions.map((transaction) => (\n          <TransactionItem key={transaction._id} transaction={transaction} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TransactionList;\n","import React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/globalState';\nconst AddTransaction = () => {\n  const { addTransation } = useContext(GlobalContext);\n  const [text, setText] = useState('');\n  const [amount, setAmount] = useState(0);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (text && amount) {\n      addTransation({\n        text,\n        amount: +amount,\n        id: Math.random(),\n      });\n      setText('');\n      setAmount(0);\n    }\n  };\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <form onSubmit={handleSubmit}>\n        <div className=\"htmlForm-control\">\n          <label htmlFor=\"text\">Text</label>\n          <input\n            type=\"text\"\n            id=\"text\"\n            value={text}\n            placeholder=\"Enter text...\"\n            onChange={(e) => setText(e.target.value)}\n          />\n        </div>\n        <div className=\"htmlForm-control\">\n          <label htmlFor=\"amount\">\n            Amount <br />\n            (negative - expense, positive - income)\n          </label>\n          <input\n            type=\"number\"\n            id=\"amount\"\n            value={amount}\n            placeholder=\"Enter amount...\"\n            onChange={(e) => setAmount(e.target.value)}\n          />\n        </div>\n        <button className=\"btn\">Add transaction</button>\n      </form>\n    </>\n  );\n};\n\nexport default AddTransaction;\n","import React from 'react';\nimport Header from './components/Header'\nimport Balance from './components/Balance'\nimport IncomeExpenses from './components/IncomeExpenses'\nimport TransactionList from './components/TransactionList'\nimport AddTransaction from './components/AddTransaction'\nimport { GlobalProvider } from './context/globalState'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"conatiner\">\n        <GlobalProvider>\n          <Balance />\n          <IncomeExpenses />\n          <TransactionList />\n          <AddTransaction />\n        </GlobalProvider>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}